LANG=en_US.UTF-8
export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
name=LnmpInstall
ver=1.0 
BaseDir=/usr/local/src
LogFile=/tmp/.$(basename $0).log
Thread=$(grep 'processor' /proc/cpuinfo | sort -u | wc -l)
[ $Thread -ge 4 ] && Thread=$((Thread-1)) || Thread=1
MirrorLink=http://panel.ropon.top/panel/lnmp
RunUser=www

#定义安装版本 都注释代表不安装
#NginxVer=1.14.2
#NginxVer=1.16.0
#PhpVer=5.4.45
#PhpVer=5.5.38
#PhpVer=5.6.40
#PhpVer=7.0.33
#PhpVer=7.1.26
#PhpVer=7.2.14
#PhpVer=7.3.1
#MysqlVer=5.5.62
#MysqlVer=5.6.38
#MysqlVer=5.7.25
#FtpVer=1.0.47
PythonVer=3.6.8
PanelVer=1.1

declare -A Colors
Colors=([failure]="31m" [success]="32m" [warning]="33m" [msg]="34m")

#lnmp path conf
nginxpath="/usr/local/nginx"
phppath="/usr/local/php"
mysqlpath="/usr/local/mysql"
ftppath="/usr/local/ftp"

#nginx conf
phpMyAdminVer=4.8.4
# 所需文件及版本号
declare -A NgFiles
NgFiles=([nginx]="nginx-${NginxVer}" [pcre]="pcre-8.42" [openssl]="openssl-1.1.1a" [zlib]="zlib-1.2.11"  [phpMyAdmin]="phpMyAdmin-${phpMyAdminVer}")
# 安装所需目录
declare -A NgDirs
NgDirs=([NginxInstallDir]="/usr/local/nginx${NginxVer}" [WwwrootDir]="/home/wwwroot" [WwwlogsDir]="/home/weblogs" [DefaultDir]="/home/wwwroot/default" [VhostDir]="/home/panel/vhost" [phpMyAdminDir]="/home/wwwroot/default/phpMyAdmin")
# 扩展模块及功能配置
NginxModulesOptions="--with-ipv6"

#php conf

PhpFlag=$(echo ${PhpVer%.*}|sed 's/\.//')
declare -A PhpFiles
PhpFiles=([php]="php-${PhpVer}" [libiconv]="libiconv-1.15" [cmake]="cmake-3.6.2" [libzip]="libzip-1.5.1")
declare -A PhpDirs
PhpDirs=([LibiconvInstallDir]="/usr/local/libiconv" [PhpInstallDir]="/usr/local/php${PhpVer}" [PhpEtcdDir]="/usr/local/php${PhpVer}/etc/php.d")
PhpModulesOptions=""

#mysql conf
BoostVer=1.68.0
MysqlFlag=$(echo ${MysqlVer%.*}|sed 's/\.//')
RootPassword=$(echo $RANDOM|md5sum|cut -c 1-8)
declare -A MysqlFiles
MysqlFiles=([mysql]="mysql-${MysqlVer}" [cmake]="cmake-3.13.3" [boost]="boost-${BoostVer}")
declare -A MysqlDirs
MysqlDirs=([MysqlInstallDir]="/usr/local/mysql${MysqlVer}" [MysqlDataDir]="/home/panel/mysql${MysqlFlag}_data")
MysqlModulesOptions=""

#ftp conf
declare -A FtpFiles
FtpFiles=([ftp]="pure-ftpd-${FtpVer}")
declare -A FtpDirs
FtpDirs=([FtpInstallDir]="/usr/local/pureftpd${FtpVer}")
FtpModulesOptions=""

#panel conf
declare -A PanelFiles
PanelFiles=([python]="Python-${PythonVer}" [panel]="panel-${PanelVer}")
declare -A PanelDirs
PanelDirs=([PythonInstallDir]="/usr/local/python-${PythonVer}" [PanelInstallDir]="/home/panel/newpanel")


#格式输出及写日志
Echo() {
	[ ! $1 ] && flag="34m" || flag=$1
	echo -e "\033[1;${Colors[${flag}]}${2}\033[0m"
	echo "$(date "+%Y-%m-%d") $(date "+%H-%M-%S"):${name}:[$1] $2" >> $LogFile
}

#下载子函数
Download() {
	url=$1
	[ -s "${url##*/}" ] && Echo "msg" "[${url##*/}] 已存在" || { wget --tries=6 -c --no-check-certificate $url; sleep 1; } #判断下载是否已存在
	if [ ! -e "${url##*/}" ]; then
		Echo "failure" "${url##*/}下载失败"
		exit
	fi
}

#获取系统及版本
CheckOS() {
	if [ -e /etc/redhat-release ]; then
		OS=CentOS
		[ -n "$(grep ' 7\.' /etc/redhat-release 2> /dev/null)" ] && CentOSVer=7
		[ -n "$(grep ' 6\.' /etc/redhat-release 2> /dev/null)" ] && CentOSVer=6
	elif [ -n "$(grep -i 'Debian' /etc/issue 2> /dev/null)" ]; then
		OS=Debian
	elif [ -n "$(grep -i 'Ubuntu' /etc/issue 2> /dev/null)" ]; then
		OS=Ubuntu
	else
		OS=UnknownOS
	fi
}
